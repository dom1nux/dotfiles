#!/usr/bin/env bash

{{ if and (eq .chezmoi.os "linux") (.chezmoi.osRelease.id | lower | contains "arch") -}}
echo "Starting Arch Linux package installation..."

# Check if running in WSL using kernel version
IS_WSL={{ contains "microsoft" (.chezmoi.kernel.osrelease | lower) }}
if [ "$IS_WSL" = true ]; then
    echo "WSL environment detected - will skip desktop packages"
fi

# Install native CLI packages first
echo "Installing Arch native CLI packages..."
sudo pacman -Syu --needed {{ range .packages.arch.cli.pacman }} {{.}}{{ end }}

{{ if not (contains "microsoft" (.chezmoi.kernel.osrelease | lower)) -}}
# Install native desktop packages if not in WSL
if [ "$IS_WSL" = false ]; then
    echo "Installing Arch native desktop packages..."
    sudo pacman -Syu --needed {{ range .packages.arch.desktop.pacman }} {{.}}{{ end }}
fi
{{ end }}

# Bootstrap yay-bin if not present
if ! command -v yay &> /dev/null; then
    echo "Bootstrapping yay-bin installation..."
    TMP_DIR=$(mktemp -d)
    git clone https://aur.archlinux.org/yay-bin.git "$TMP_DIR"
    cd "$TMP_DIR"
    makepkg -si --noconfirm
    cd "$HOME"
    rm -rf "$TMP_DIR"
    echo "yay-bin bootstrapped successfully"
fi

# Install AUR CLI packages if any - currently none defined
# {{ if .packages.arch.cli.aur }}
# echo "Installing AUR CLI packages..."
# yay -Syu --needed {{ range .packages.arch.cli.aur }} {{.}}{{ end }}
# {{ end }}

{{ if not (contains "microsoft" (.chezmoi.kernel.osrelease | lower)) -}}
# Install AUR desktop packages if not in WSL
if [ "$IS_WSL" = false ]; then
    echo "Installing AUR desktop packages..."
    yay -Syu --needed {{ range .packages.arch.desktop.aur }} {{.}}{{ end }}
fi
{{ end }}

echo "Package installation completed successfully!"
{{ end }}
